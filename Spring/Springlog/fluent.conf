# 입력 설정: Spring Boot 애플리케이션에서 전송된 로그를 수신합니다.
<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

# 필터 설정: 필요에 따라 로그 데이터를 변환합니다 (옵션).
<filter springboot.**>
  @type record_transformer
  <record>
    hostname "#{Socket.gethostname}"
    service "springboot-application"
  </record>
</filter>

# 출력 설정: 로그를 Amazon S3로 전송합니다.
<match springboot.**>
  @type s3

  # IAM 역할을 사용할 경우, AWS 자격 증명 키 설정은 생략됩니다.
  aws_key_id AKIA4MKBSOIFAFDO52FO
  aws_sec_key VGjEBX4UhMezBe5Gzm7WHjwmtmfheE6ajBaqJJ/y
  # 지역 및 버킷 이름을 업로드된 이미지 정보에 맞게 수정합니다.
  s3_bucket pipeline-api-server
  s3_region ap-northeast-2

  # 로그의 저장 경로. 이 예시에서는 태그와 시간에 기반하여 경로를 생성합니다.
  path logs/${tag}/%Y/%m/%d/

  <buffer tag,time>
    @type file
    path /var/log/fluentd-buffers/s3
    timekey 3600 # 1 hour partition
    timekey_wait 10m
    timekey_use_utc false # 서울 시간대 사용
    timezone Asia/Seoul # 서울 시간대 지정
    chunk_limit_size 256m
  </buffer>

  <format>
    @type json
  </format>

  store_as gzip # S3에 로그를 gzip 형식으로 저장
</match>
